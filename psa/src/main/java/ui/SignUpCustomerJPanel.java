/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.example.Ecosystem;
import org.example.utils.DBConn;
import com.toedter.calendar.JDateChooser;
import java.sql.Date;
import java.sql.Types;
import java.util.Locale;
import javax.swing.JLabel;

/**
 *
 * @author marri
 */
public class SignUpCustomerJPanel extends javax.swing.JPanel {

    Ecosystem es;
    javax.swing.JPanel CardSequencePanel;
    /**
     * Creates new form SignUpJPanel
     */
    public SignUpCustomerJPanel (Ecosystem es, JPanel clp) {
        this.es=es;
        this.CardSequencePanel = clp;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtZipCode = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        btnSignUp = new javax.swing.JButton();
        txtPassword = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cmbGender = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SignUp Customer");
        add(jLabel1);
        jLabel1.setBounds(0, 0, 620, 71);

        jLabel2.setText("Street Address");
        add(jLabel2);
        jLabel2.setBounds(170, 260, 120, 16);

        jLabel3.setText("Name");
        add(jLabel3);
        jLabel3.setBounds(170, 110, 80, 16);

        jLabel5.setText("Gender");
        add(jLabel5);
        jLabel5.setBounds(170, 170, 70, 16);

        jLabel6.setText("email");
        add(jLabel6);
        jLabel6.setBounds(170, 200, 80, 16);

        jLabel7.setText("Phone number");
        add(jLabel7);
        jLabel7.setBounds(170, 230, 110, 16);

        jLabel8.setText("City");
        add(jLabel8);
        jLabel8.setBounds(170, 290, 110, 16);

        jLabel9.setText("State");
        add(jLabel9);
        jLabel9.setBounds(170, 320, 100, 16);

        jLabel10.setText("Password");
        add(jLabel10);
        jLabel10.setBounds(160, 140, 120, 16);
        add(txtZipCode);
        txtZipCode.setBounds(310, 350, 120, 22);
        add(txtState);
        txtState.setBounds(310, 320, 120, 22);
        add(txtCity);
        txtCity.setBounds(310, 290, 120, 22);
        add(txtAddress);
        txtAddress.setBounds(310, 260, 120, 22);
        add(txtPhone);
        txtPhone.setBounds(310, 230, 120, 22);
        add(txtEmail);
        txtEmail.setBounds(310, 200, 120, 22);
        add(txtName);
        txtName.setBounds(310, 110, 120, 22);

        btnSignUp.setText("Sign up");
        btnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpActionPerformed(evt);
            }
        });
        add(btnSignUp);
        btnSignUp.setBounds(240, 410, 120, 30);
        add(txtPassword);
        txtPassword.setBounds(310, 140, 120, 22);

        jLabel11.setText("ZipCode");
        add(jLabel11);
        jLabel11.setBounds(170, 350, 120, 16);

        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male","Female","Non-Binary" }));
        add(cmbGender);
        cmbGender.setBounds(310, 170, 120, 22);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(60, 440, 72, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignUpActionPerformed
        // TODO add your handling code here:
        Connection conn = DBConn.establishConnection();
        if (txtPhone != null && !isValidPhoneNumber(txtPhone.getText())) {
            JOptionPane.showMessageDialog(this, " Mobile phone number cannot be null and should be a 10-digit number.");
            return;
        }
        if (txtPassword != null &&!isValidPassword(txtPassword.getText())) {
            JOptionPane.showMessageDialog(this, "Password cannot be empty.");
            return;
        }
        if (cmbGender != null &&!isValidGender(cmbGender.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(this, "Gender should not exceed 10 characters.");
            return;
        }
        if (txtEmail != null &&!isValidEmail(txtEmail.getText())) {
            JOptionPane.showMessageDialog(this, "Email cannot be null and should not exceed 50 characters.");
            return;
        }
        if (txtAddress != null &&!isValidStreetAddress(txtAddress.getText())) {
            JOptionPane.showMessageDialog(this, "Street address is required and should not exceed 50 characters.");
            return;
        }
        if (txtCity != null &&!isValidCity(txtCity.getText())) {
           JOptionPane.showMessageDialog(this, "City is required and should not exceed 20 characters.");
            return;
        }
        if (txtState != null &&!isValidState(txtState.getText())) {
            JOptionPane.showMessageDialog(this, "State is required and should not exceed 20 characters.");
            return;
        }
        if (txtZipCode != null &&!isValidZipcode(txtZipCode.getText())) {
            JOptionPane.showMessageDialog(this, "Zipcode is required and should be a 5-digit number.");
            return;
        }
        if(es.getCustomerDirectory().findCustomerByEmail(txtEmail.getText()) != null){
            JOptionPane.showMessageDialog(this,"Email Already exists!");                    
            return;
        }
        if(es.getCustomerDirectory().findCustomerByPhone(txtPhone.getText()) != null){
            JOptionPane.showMessageDialog(this,"Mobile number Already exists!");                    
            return;
        }
        System.out.println(txtName.getText() +"-"+ cmbGender.getSelectedItem().toString()+"-"+  txtEmail.getText()+"-"+ txtPhone.getText()+"-"+ txtAddress.getText()+"-"+ txtCity.getText()+"-"+ txtState.getText()+"-"+ txtZipCode.getText()+"-"+ txtPassword.getText());
        try {
            CallableStatement callableStatement = conn.prepareCall("{call CUSTOMER_REGISTRATION_PROCEDURE(?,?,?,?,?,?,?,?,?,?,?)}");
            callableStatement.setString(1, txtName.getText());
            callableStatement.setDate(2, new Date(2020, 11, 24));
            callableStatement.setString(3, cmbGender.getSelectedItem().toString());
            callableStatement.setString(4, txtEmail.getText());
            callableStatement.setInt(5, Integer.parseInt(txtPhone.getText()));
            callableStatement.setString(6, txtAddress.getText());
            callableStatement.setString(7, txtCity.getText());
            callableStatement.setString(8, txtState.getText());
            callableStatement.setString(9, txtZipCode.getText());
            callableStatement.setString(10, txtPassword.getText());
            callableStatement.registerOutParameter(11, Types.INTEGER);
            callableStatement.execute();
            int outP = callableStatement.getInt(11);
            System.out.println("newly created customer id is "+ outP);
            es.refreshCustomers();
            JOptionPane.showMessageDialog(this, "Customer is created!");
        } catch (SQLException ex) {
            Logger.getLogger(SignUpDPJPanel.class.getName()).log(Level.SEVERE, ex.toString(), ex);
        }catch(NumberFormatException nEx){
            System.out.println(nEx.toString());
            JOptionPane.showMessageDialog(this, "Phone number is inCorrect!");
        }
    }//GEN-LAST:event_btnSignUpActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

private static boolean isValidPhoneNumber(String phoneNumber) {
        return phoneNumber != null || phoneNumber.length() == 10;
    }
    
    private static boolean isValidPassword(String password) {
        return password != null || !password.isEmpty();
    }
    
    private static boolean isValidGender(String gender) {
        return gender != null || gender.length() <= 10;
    }
    
    private static boolean isValidEmail(String email) {
        return email != null || email.length() <= 50 || email.matches("^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,4}$");
    }
    
    private static boolean isValidStreetAddress(String streetAddress) {
        return streetAddress != null || streetAddress.length() <= 50;
    }
    
    private static boolean isValidCity(String city) {
        return city != null || city.length() <= 20;
    }
    
    private static boolean isValidState(String state) {
        return state != null || state.length() <= 20;
    }
    
    private static boolean isValidZipcode(String zipcode) {
        return zipcode != null || zipcode.length() == 5;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSignUp;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
}
