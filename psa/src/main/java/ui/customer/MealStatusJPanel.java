/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.customer;

import java.awt.CardLayout;
import java.util.UUID;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.example.BookingDirectory;
import org.example.Ecosystem;

import org.example.dsa.LinkedBag;
import org.example.persona.Booking;
import org.example.persona.Customer;

/**
 *
 * @author marri
 */
public class MealStatusJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MealStatusJPanel
     */
    Ecosystem es;
    javax.swing.JPanel CardSequencePanel;
    Customer cust;
    BookingDirectory bookingDirectory;
    public MealStatusJPanel(Ecosystem es, JPanel clp, Customer cust) {
        this.es=es;
        this.CardSequencePanel = clp;
        this.cust = cust;
        this.bookingDirectory = es.getBookingDirectory();
        initComponents();
        populateBookingTable() ;

    }
  private void populateBookingTable() {

      

       LinkedBag<Booking> linkedbag = new LinkedBag<>();
       String customerId=cust.getId();
    
       // Add all bookings from BookingDirectory to the priority queue
       if (bookingDirectory != null && bookingDirectory.getBookingList() != null) {
        for (Booking booking : bookingDirectory.getBookingList()) {
            System.out.println("booking: ----"+booking.toString()+"---");
                if(customerId.equals(booking.getCustomerId()))
//                {
//                System.out.println("booking2: ----"+booking.toString()+"---");
//                linkedbag.add(booking);
//                }
                linkedbag.add(booking);
          
        }
        
    }
// Meal Type
 
       

    // Define columns for the table model
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Meal ID");
    model.addColumn("Meal Type");
    model.addColumn("Booking Date");
    model.addColumn("Date of Delivery");
    model.addColumn("Time Slot");
    model.addColumn("Delivery Partner ID");
    model.addColumn("Is Delivered");

    // Iterate through the priority queue and add rows to the model
    while (!linkedbag.isEmpty()) {
        Booking booking = linkedbag.remove();
        model.addRow(new Object[]{
            booking.getMealId(),
            getMealType(booking.getMealId()),
            booking.getBookingDate(),
            booking.getDateOfDelivery(),
            booking.getTimeSlot(),
            booking.getDeliveryPersonId(),
            booking.isDelivered()
        });
    }

    // Set the model for the jTable1
    jTable1.setModel(model);
    }
private String getMealType(String mealId)
{
     
String mealType = UUID.randomUUID().toString();
       if(mealId.equals("444001"))
        {
        mealType="VEG";
        }
        else if(mealId.equals("444002"))
        {
        mealType="NON-VEG";
        }
  else if(mealId.equals("444003"))
        {
        mealType="VEGAN";
        }
  else if(mealId.equals("444004"))
        {
        mealType="HALAL";
        }
return mealType;
}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Meal Order Status");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton5.setText("Logout");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(77, 77, 77))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel); 
        //populateBookingTable();
    }//GEN-LAST:event_btnBackActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        CardLayout cardLayout = (CardLayout) CardSequencePanel.getLayout();
        cardLayout.first(CardSequencePanel);

    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
